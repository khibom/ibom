<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
						
	<!--  이설정을 해두지 않으면 css js 가 먹히지 않게됨 resource 하위 폴더로는 검사를 하지 않는다. -->
	<security:http pattern="/resources/**" security="none" />
	

	<!--  해당 url 접근시 권한체크함 맞지 않으면 403 에러 발생 권한처리-->
	<security:http auto-config="true" use-expressions="true" create-session="never">
            <security:intercept-url pattern="/iusers/**.do" access="hasRole('ROLE_USER')"/>
            <security:intercept-url pattern="/dolbomi/**.do" access="hasRole('ROLE_DOLBOMI')"/>
            <security:intercept-url pattern="/admin/**.do" access="hasRole('ROLE_ADMIN')"/>
            <security:intercept-url pattern="/**" access="permitAll"/>
				<!-- 
					username-parameter = 인풋태그 네임에 지정할 아이디 
					password-parameter = 인풋태그 네임에 지정할 비밀번호
					 login-page = 권한없는 사용자가 권한에 맞지 않는 url 접근시 이동시킬 url
					 login-processing-url = form태그 action 에 지정할 mapping
					 default-target-url = 권한체크 성공시 이동시킬 url
					 authentication-failure-url = 로그인 실패시 이동되는 url 설정
					 
				 -->
            <security:form-login
                username-parameter="user_id"  
                password-parameter="user_pwd"
                login-processing-url="/login.do"
                login-page="/loginPage.do"
                default-target-url="/loginsuccess.do"
                authentication-failure-handler-ref="loginFailureHandler"
             	/>
        <!--  로그아웃할 url 및 로그아웃성공시 이동할 url invalidate-session="true" 로그아웃시 세션삭제유무-->
          <security:logout logout-url="/logout" logout-success-url="/main.do" invalidate-session="true" />
          <!-- 세션 처리 중복로그인 max-sessions="1" 설정 이상 중복 발생시 보낼 페이지 expired-url="/login_duplicate.do"-->
          <!-- invalid-session-url="/main.do" 세션이 끊어 졌을때 이동할 URL 
          	   session-fixation-protection=세션 고정공격 방어 
          -->
          <security:session-management invalid-session-url="/main.do" session-fixation-protection="changeSessionId">
                  <security:concurrency-control  max-sessions="1" expired-url="/login_duplicate.do"/>
          </security:session-management> 
          
          <!-- scrf 해킹관련 보안 설정 할건지 유무 -->
          <security:csrf disabled="true" />
          
		  <!--  403에러 시 보낼 url -->
          <security:access-denied-handler error-page="/access_denied_page.do"/>     
        </security:http>
	
	<!-- 로그인 관련 커스텀마이징 할 클래스 등록 -->
 	<security:authentication-manager>
      <security:authentication-provider ref="customAuthenticationProvider">

      </security:authentication-provider>
      <security:authentication-provider user-service-ref="AuthorityService" />
      
 	</security:authentication-manager>
 	<bean id="loginFailureHandler" class="com.kh.ibom.security.LoginFailureHandler">
    <property name="loginidname" value="user_id"/>
    <property name="loginpwdname" value="user_pwd"/>
    <property name="errormsgname" value="ERRORMSG"/>
    <property name="defaultFailureUrl" value="/loginPage.do?error"/>
	</bean>

 	<beans:bean class="com.kh.ibom.security.CustomAuthenticationProvider" id="customAuthenticationProvider" />
 	<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="bcryptPasswordEncoder" /> 
	<beans:bean class="com.kh.ibom.authority.model.service.AuthorityServiceImpl" id="AuthorityService" />
	
	
 	<context:component-scan base-package="com.kh.ibom" />
	
	
</beans>
