<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="assignmentMapper">
   <select id="selectList" resultType="Assignment"
      parameterType="string">
      <![CDATA[
		select V.service2_no, V.user_id, V.user_name, V.service_typ, V.service_date, V.startt, V.endt, V.licen, V.interview,V.cctv, V.pet, V.address, V.apply_day, V.office_name, V.likedol, 
		V.baby_count, V.kid_count, V.child_count, count(F.service2_no) as likecount
		from(select service2_no, user_id, user_name, service_typ, service_date, startt, endt, licen, interview, cctv, pet, address, apply_day, office_name, likedol, 
         sum(decode(baby_age, '영아', 1 , 0)) as baby_count, sum(decode(baby_age, '유아', 1 , 0)) as kid_count, sum(decode(baby_age, '초등', 1 , 0)) as child_count
        from (select A.service2_no, A.user_id, substr(C.user_name, 1, 1)||'O'||substr(C.user_name, 3, 1) as user_name, A.dolbom_type || '(' || A.service_type || ')' as service_typ, 
        A.apply_date as service_date, substr(A.start_time,1,2)||':'||substr(A.start_time,4,2) as startt, substr(A.end_time,1,2)||':'||substr(A.end_time,4,2) as endt, 
        C.license_alter as licen, decode(A.interview_fee, 12000, 'Y', 'N') as interview, C.cctv_alter as cctv, C.pet_alter as pet, substr(C.user_address, 8) as address, 
                        A.apply_day, D.OFFICE_NAME, case when A.service2_no in (select service2_no from liketo where dol_id = #{value}) then 'Y' else 'N' end  as likedol,
                        case when EXTRACT(YEAR FROM SYSDATE) - (DECODE(SUBSTR(E.family_no,7,1),'1', '19','2','19','20') || SUBSTR(E.family_no,1,2)) +1 <= 2 then '영아' 
                        when EXTRACT(YEAR FROM SYSDATE) - (DECODE(SUBSTR(E.family_no,7,1),'1', '19','2','19','20') || SUBSTR(E.family_no,1,2)) +1 BETWEEN 3 and 7 then '유아'
                        else '초등' end as baby_age
                from service_apply2 A, service_apply3 B, iusers C, office D, user_family E
                where A.service2_no = B.service2_no and A.user_id = C.user_id and C.office_code = D.office_code and B.family_code = E.family_code and A.apply_status = '돌보미 배정중'
                order by 13 desc)
        group by service2_no, user_id, user_name, service_typ, service_date, startt, endt, licen, interview, cctv, pet, address, apply_day, office_name,likedol) V, liketo F
		where V.service2_no = F.service2_no(+)
		group by V.service2_no, V.user_id, V.user_name, V.service_typ, V.service_date, V.startt, V.endt, V.licen, V.interview,V.cctv, V.pet, V.address, V.apply_day, V.office_name, V.likedol, 
		V.baby_count, V.kid_count, V.child_count
		]]>
   </select>

	<select id="adminselectList" resultType="Assignment"  parameterType="com.kh.ibom.common.CommonPaging">
		select * from(
		select rownum as num, service2_no, user_id, user_name, service_date, care_day, startt, endt, office_name, apply_day, apply_status, dol_id, dol_name, req_institution, req_dolbomi
		from (select A.service2_no, A.user_id, B.user_name, A.APPLY_DATE as service_date, care_day, substr(start_time,1,2)||':'||substr(start_time,4,2) as startt, 
		substr(end_time,1,2)||':'||substr(end_time,4,2) as endt, office_name, apply_day, apply_status, nvl(A.dolbomi_id,'배정중') as dol_id, nvl(D.dol_name,'배정중') as dol_name,
   		 E.REQ_INSTITUTION, E.REQ_DOLBOMI
		 from service_apply2 A, Iusers B, office C, dolbomi D, service_apply1 E
		where A.user_id = B.user_id and B.office_code = C.office_code and A.dolbomi_id = D.dol_id(+) and A.service1_no = E.service1_no
		and apply_status != '서비스 취소' and apply_status != '취소요청'
		order by apply_day desc))
		<![CDATA[ where num >= #{startList} and num <= #{endList}]]>
	</select>
	
	<select id="listCount" resultType="int">
		select count(*)
		from service_apply2 A, Iusers B, office C, dolbomi D
		where A.user_id = B.user_id and B.office_code = C.office_code and A.dolbomi_id = D.dol_id(+)
		and apply_status != '신청취소'
		order by apply_day desc
	</select>
	
	<select id="adminSelectOne" resultType="Assignment"  parameterType="string">	
		select * from(
		select rownum as num, service2_no, user_id, user_name, service_date, care_day, startt, endt, office_name, apply_day, apply_status, dol_id, dol_name 
		from (select A.service2_no, A.user_id, B.user_name, A.APPLY_DATE as service_date, care_day, substr(start_time,1,2)||':'||substr(start_time,4,2) as startt, 
		substr(end_time,1,2)||':'||substr(end_time,4,2) as endt, office_name, apply_day, apply_status, nvl(A.dolbomi_id,'배정중') as dol_id, nvl(D.dol_name,'배정중') as dol_name
		 from service_apply2 A, Iusers B, office C, dolbomi D
		where A.user_id = B.user_id and B.office_code = C.office_code and A.dolbomi_id = D.dol_id(+)
		and apply_status != '신청취소' and service2_no = #{value}
		order by apply_day desc))
	</select>
	
	<select id="adminBabyList" resultType="Assignment"  parameterType="string">	
		select B.family_code, D.family_name, substr(D.family_no, 1, 6) as baby_birth, A.dolbom_type || '(' || A.service_type || ')' as service_typ
		from service_apply2 A, service_apply3 B, iusers C, user_family D
		where A.service2_no = B.service2_no
		and A.user_id = C.user_id
		and B.family_code = D.family_code
		and A.service2_no = #{value}
	</select>
	
	<select id="adminPreDolList" resultType="Assignment"  parameterType="string">
		select rownum, apply_date as service_date, dolbomi_id as dol_id, dol_name, APPLY_STATUS
		from(select * 
		from service_apply2 A, dolbomi B
		where A.dolbomi_id = B.dol_id(+)
		and apply_status like '%서비스%'
		and apply_date BETWEEN sysdate -60 and sysdate
		and user_id = #{value}
		order by apply_date desc)
		where rownum between 1 and 10
	</select>

	<update id="adminAssignment" parameterType="ServiceApply2">
		update service_apply2
		set interview_status = '면접예정',apply_status = '돌보미 배정완료',dolbomi_id = #{dolbomi_id}
		where service2_no = #{service2_no}
	</update>



</mapper>